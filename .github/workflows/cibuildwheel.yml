name: Build Wheels

on: [push, pull_request, workflow_dispatch]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel~=2.22.0

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD_VERBOSITY: 1

          CIBW_ARCHS: auto64
          CIBW_SKIP: "pp* *musl*"
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_EXTRAS: hdf5

          CIBW_ENVIRONMENT: >
            PIP_ONLY_BINARY="numpy h5py"

          CIBW_BEFORE_ALL_LINUX: >
            yum install -y protobuf-compiler protobuf-lite-devel
            || dnf install -y protobuf-compiler protobuf-lite-devel
            || (apt-get -y update && apt-get -y install protobuf-compiler libprotobuf-dev )

          CIBW_ENVIRONMENT_MACOS: >
            AACLIENT_INCLUDE_DIRS="/opt/homebrew/include"
            AACLIENT_LIB_DIRS="/opt/homebrew/lib"
          CIBW_BEFORE_ALL_MACOS: brew config && brew install protobuf

          CIBW_ENVIRONMENT_WINDOWS: >
            AACLIENT_INCLUDE_DIRS="$VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\include"
            AACLIENT_LIB_DIRS="$VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\lib"
            PATH="$VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\tools\\protobuf;$VCPKG_INSTALLATION_ROOT\\installed\\x64-windows\\bin;$PATH"
          CIBW_BEFORE_ALL_WINDOWS: >
            %VCPKG_INSTALLATION_ROOT%\vcpkg --disable-metrics install protobuf:x64-windows
            && dir %VCPKG_INSTALLATION_ROOT%\installed\x64-windows\include
            && dir %VCPKG_INSTALLATION_ROOT%\installed\x64-windows\lib
            && dir %VCPKG_INSTALLATION_ROOT%\installed\x64-windows\bin
            && dir %VCPKG_INSTALLATION_ROOT%\installed\x64-windows\tools\protobuf

          CIBW_TEST_COMMAND: >
            pwd
            && python -m pytest -v --log-level=DEBUG --pyargs aaclient

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}
          path: ./wheelhouse/*.whl
          retention-days: 1

  sdist:
    name: Source
    runs-on: ubuntu-latest
    needs: [build_wheels]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Prep
        run: |
          python -m pip install --only-binary numpy -r requirements.txt
          python -m pip install twine
          python -m twine -h

      - name: sdist
        run: python -m build --sdist .

      - name: Fetch wheels
        uses: actions/download-artifact@v4
        with:
          path: dist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ./dist/*.gz
          retention-days: 1

      - name: List
        run: ls -lhR dist

      - name: Check
        run: >
          python -m twine check
          --strict
          dist/*.gz dist/*/*.whl

      - name: Upload
        if: ${{ startsWith(github.ref, 'refs/tags/') && github.repository == 'mdavidsaver/aaclient' }}
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: >
          python -m twine upload
          --disable-progress-bar --non-interactive --verbose --skip-existing
          dist/*.gz dist/*/*.whl
